{
  "stats": {
    "suites": 12,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-06T03:50:47.127Z",
    "end": "2021-02-06T03:50:47.613Z",
    "duration": 486,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "208b934c-0f13-4104-97a2-977e7567ef5c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e5322667-72d3-4f89-9d3f-c2b1966a5921",
          "title": "Protected Resource Access",
          "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/auth_access.test.js",
          "file": "/test/auth_access.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Protected Resource Access\"",
              "fullTitle": "Protected Resource Access \"after all\" hook in \"Protected Resource Access\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.findOne({\n    where: {\n      email: constants.TEST_USER.email\n    }\n  }).then((user)=>{\n    if (user){\n      user.destroy().then((res)=>{\n        done();\n      });\n    }\n  })",
              "err": {},
              "uuid": "abeb76bd-0ead-4108-b12a-043b2dd29ce5",
              "parentUUID": "e5322667-72d3-4f89-9d3f-c2b1966a5921",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8b24658c-20df-438a-a882-7372804ebbf5",
              "title": "Sign up",
              "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/auth_access.test.js",
              "file": "/test/auth_access.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST to signup new user",
                  "fullTitle": "Protected Resource Access Sign up it should POST to signup new user",
                  "timedOut": false,
                  "duration": 132,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signup')\n    .send(constants.TEST_USER)\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.contain({message:constants.REGISTERED_SUCCESS});\n      done();\n    });",
                  "err": {},
                  "uuid": "8e4ada21-c1d2-4091-9421-2950520cb360",
                  "parentUUID": "8b24658c-20df-438a-a882-7372804ebbf5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should fail GET user content without token",
                  "fullTitle": "Protected Resource Access Sign up it should fail GET user content without token",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/test/user')\n    .set('x-access-token', token)\n    .end((err, res) => {\n          res.should.have.status(403);\n          res.body.should.be.an('object');\n          res.body.should.contain({message:constants.UNAUTH_FORBIDDEN});\n          done();\n    });",
                  "err": {},
                  "uuid": "62ce3e4c-2175-4632-b6c2-abca81c29a40",
                  "parentUUID": "8b24658c-20df-438a-a882-7372804ebbf5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should POST to signin user",
                  "fullTitle": "Protected Resource Access Sign up it should POST to signin user",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signin')\n    .send({email: constants.TEST_USER.email, password: constants.TEST_USER.password})\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.accessToken.should.be.a('string');\n          token=res.body.accessToken;\n          done();\n    });",
                  "err": {},
                  "uuid": "eb786a4a-1bde-412f-a844-de6ed99cee49",
                  "parentUUID": "8b24658c-20df-438a-a882-7372804ebbf5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET user content with token",
                  "fullTitle": "Protected Resource Access Sign up it should GET user content with token",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/test/user')\n    .set('x-access-token', token)\n    .end((err, res) => {\n          res.should.have.status(200);\n          done();\n    });",
                  "err": {},
                  "uuid": "648ebd27-65e2-44ca-a136-f1c7ffbf1f7e",
                  "parentUUID": "8b24658c-20df-438a-a882-7372804ebbf5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e4ada21-c1d2-4091-9421-2950520cb360",
                "62ce3e4c-2175-4632-b6c2-abca81c29a40",
                "eb786a4a-1bde-412f-a844-de6ed99cee49",
                "648ebd27-65e2-44ca-a136-f1c7ffbf1f7e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 173,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "78c2c0da-5d39-45ab-8ce8-b48404a6975f",
          "title": "Protected Resource Update",
          "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/auth_update.test.js",
          "file": "/test/auth_update.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Protected Resource Update\"",
              "fullTitle": "Protected Resource Update \"after all\" hook in \"Protected Resource Update\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.findOne({\n    where: {\n      email: constants.TEST_USER.email\n    }\n  }).then((user)=>{\n    if (user){\n      user.destroy().then((res)=>{\n        done();\n      });\n    }\n  })",
              "err": {},
              "uuid": "a2542739-f29d-48ac-8fc8-b37b2f15aa79",
              "parentUUID": "78c2c0da-5d39-45ab-8ce8-b48404a6975f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7b8a736f-e12c-4eb3-803c-79928eda987a",
              "title": "Sign up",
              "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/auth_update.test.js",
              "file": "/test/auth_update.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST to signup new user",
                  "fullTitle": "Protected Resource Update Sign up it should POST to signup new user",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signup')\n    .send(constants.TEST_USER)\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.contain({message:constants.REGISTERED_SUCCESS});\n      done();\n    });",
                  "err": {},
                  "uuid": "5988669b-32fe-4fd7-947c-c6d35fbb1f51",
                  "parentUUID": "7b8a736f-e12c-4eb3-803c-79928eda987a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should FAIL PUT user name without token",
                  "fullTitle": "Protected Resource Update Sign up it should FAIL PUT user name without token",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n  .put('/api/admin/user')\n  .send({name: constants.NEW_NAME})\n  .set('x-access-token', token)\n  .end((err, res) => {\n        res.should.have.status(403);\n        done();\n  });",
                  "err": {},
                  "uuid": "dcbf1312-7bcf-4e4a-af5f-34536cf57064",
                  "parentUUID": "7b8a736f-e12c-4eb3-803c-79928eda987a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should POST to signin user",
                  "fullTitle": "Protected Resource Update Sign up it should POST to signin user",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signin')\n    .send({email: constants.TEST_USER.email, password: constants.TEST_USER.password})\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.accessToken.should.be.a('string');\n          token=res.body.accessToken;\n          done();\n    });",
                  "err": {},
                  "uuid": "8e2b378b-6961-40b4-9136-028fc640853e",
                  "parentUUID": "7b8a736f-e12c-4eb3-803c-79928eda987a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should PUT user name with token",
                  "fullTitle": "Protected Resource Update Sign up it should PUT user name with token",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n  .put('/api/admin/user')\n  .send({name: constants.NEW_NAME})\n  .set('x-access-token', token)\n  .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        let name = res.body.name;\n        assert.strictEqual(name, constants.NEW_NAME)\n        done();\n  });",
                  "err": {},
                  "uuid": "c5856eac-2644-40b4-a0b2-d9ba49523f4d",
                  "parentUUID": "7b8a736f-e12c-4eb3-803c-79928eda987a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5988669b-32fe-4fd7-947c-c6d35fbb1f51",
                "dcbf1312-7bcf-4e4a-af5f-34536cf57064",
                "8e2b378b-6961-40b4-9136-028fc640853e",
                "c5856eac-2644-40b4-a0b2-d9ba49523f4d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 76,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ca981104-74b0-45d2-a7e7-ed0eedfac5df",
          "title": "User Log out",
          "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/logout.test.js",
          "file": "/test/logout.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Log out\"",
              "fullTitle": "User Log out \"after all\" hook in \"User Log out\"",
              "timedOut": false,
              "duration": 16,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.findOne({\n    where: {\n      email: constants.TEST_USER.email\n    }\n  }).then((user)=>{\n    if (user){\n      user.destroy().then((res)=>{\n        done();\n      });\n    }\n  })",
              "err": {},
              "uuid": "addf8bd3-3c70-46b3-8f22-49b4280bd906",
              "parentUUID": "ca981104-74b0-45d2-a7e7-ed0eedfac5df",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9b1d9ffb-92c3-4a15-9aca-5d039b2ecb6a",
              "title": "Sign up",
              "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/logout.test.js",
              "file": "/test/logout.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST to signup new user",
                  "fullTitle": "User Log out Sign up it should POST to signup new user",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signup')\n    .send(constants.TEST_USER)\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.contain({message:constants.REGISTERED_SUCCESS});\n      done();\n    });",
                  "err": {},
                  "uuid": "09af502d-c320-43cd-8782-c11f952f7c7d",
                  "parentUUID": "9b1d9ffb-92c3-4a15-9aca-5d039b2ecb6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should POST to signin user",
                  "fullTitle": "User Log out Sign up it should POST to signin user",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signin')\n    .send({email: constants.TEST_USER.email, password: constants.TEST_USER.password})\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.accessToken.should.be.a('string');\n          token=res.body.accessToken;\n          done();\n    });",
                  "err": {},
                  "uuid": "c687d8b7-5f12-4ab4-a982-24f0525d5318",
                  "parentUUID": "9b1d9ffb-92c3-4a15-9aca-5d039b2ecb6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET user content with token",
                  "fullTitle": "User Log out Sign up it should GET user content with token",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/test/user')\n    .set('x-access-token', token)\n    .end((err, res) => {\n          res.should.have.status(200);\n          done();\n    });",
                  "err": {},
                  "uuid": "713c799b-71f2-406d-8e07-443eb4476b55",
                  "parentUUID": "9b1d9ffb-92c3-4a15-9aca-5d039b2ecb6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should GET to log out user",
                  "fullTitle": "User Log out Sign up it should GET to log out user",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n  .post('/api/auth/logout')\n  .set('x-access-token', token)\n  .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.should.contain({message:\"Logged out\"});\n        done();\n  });",
                  "err": {},
                  "uuid": "2868cb42-9a59-4a7d-ab3e-b32db4dc8dfd",
                  "parentUUID": "9b1d9ffb-92c3-4a15-9aca-5d039b2ecb6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should fail GET user content without token",
                  "fullTitle": "User Log out Sign up it should fail GET user content without token",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/api/test/user')\n    .set('x-access-token', token)\n    .end((err, res) => {\n          res.should.have.status(403);\n          res.body.should.be.an('object');\n          res.body.should.contain({message:constants.UNAUTH_FORBIDDEN});\n          done();\n    });",
                  "err": {},
                  "uuid": "acaca09a-91f7-4861-b874-1e2bad7eeb6d",
                  "parentUUID": "9b1d9ffb-92c3-4a15-9aca-5d039b2ecb6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09af502d-c320-43cd-8782-c11f952f7c7d",
                "c687d8b7-5f12-4ab4-a982-24f0525d5318",
                "713c799b-71f2-406d-8e07-443eb4476b55",
                "2868cb42-9a59-4a7d-ab3e-b32db4dc8dfd",
                "acaca09a-91f7-4861-b874-1e2bad7eeb6d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 81,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e38f3ec-dd00-4e7c-b842-52434643c2ee",
          "title": "Route",
          "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/route.test.js",
          "file": "/test/route.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "de4dcf0c-66b5-47eb-b2b0-291ae7a41529",
              "title": "Route Test",
              "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/route.test.js",
              "file": "/test/route.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET default route",
                  "fullTitle": "Route Route Test it should GET default route",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .get('/')\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.contain({message:constants.DISPLAY_MESSAGE});\n      done();\n    });",
                  "err": {},
                  "uuid": "e21fe80e-9fd3-4d4d-8d33-ccc37ece3fed",
                  "parentUUID": "de4dcf0c-66b5-47eb-b2b0-291ae7a41529",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e21fe80e-9fd3-4d4d-8d33-ccc37ece3fed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23b0072c-68db-423e-9a99-e04b67ce11a0",
          "title": "User Sign in",
          "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/signin.test.js",
          "file": "/test/signin.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Sign in\"",
              "fullTitle": "User Sign in \"after all\" hook in \"User Sign in\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.findOne({\n    where: {\n      email: constants.TEST_USER.email\n    }\n  }).then((user)=>{\n    if (user){\n      user.destroy().then((res)=>{\n        done();\n      });\n    }\n  })",
              "err": {},
              "uuid": "b2b0960a-452a-4b2c-bc3d-55c25c107a2a",
              "parentUUID": "23b0072c-68db-423e-9a99-e04b67ce11a0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "c199800b-a87f-4249-b925-12b6fdf39881",
              "title": "Sign up",
              "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/signin.test.js",
              "file": "/test/signin.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST to signup new user",
                  "fullTitle": "User Sign in Sign up it should POST to signup new user",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signup')\n    .send(constants.TEST_USER)\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.contain({message:constants.REGISTERED_SUCCESS});\n      done();\n    });",
                  "err": {},
                  "uuid": "849eb6cd-fdbe-44eb-b290-f2cf71ade51f",
                  "parentUUID": "c199800b-a87f-4249-b925-12b6fdf39881",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should POST to signin user",
                  "fullTitle": "User Sign in Sign up it should POST to signin user",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signin')\n    .send({email: constants.TEST_USER.email, password: constants.TEST_USER.password})\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.accessToken.should.be.a('string');\n          done();\n    });",
                  "err": {},
                  "uuid": "a2b078d8-6e01-491b-82fe-51526781e784",
                  "parentUUID": "c199800b-a87f-4249-b925-12b6fdf39881",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "849eb6cd-fdbe-44eb-b290-f2cf71ade51f",
                "a2b078d8-6e01-491b-82fe-51526781e784"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 59,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e80fb72-a143-497c-b49b-4fae7a58ecef",
          "title": "User Registration",
          "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/signup.test.js",
          "file": "/test/signup.test.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Registration\"",
              "fullTitle": "User Registration \"after all\" hook in \"User Registration\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "User.findOne({\n    where: {\n      email: constants.TEST_USER.email\n    }\n  }).then((user)=>{\n    if (user){\n      user.destroy().then((res)=>{\n        done();\n      });\n    }\n  })",
              "err": {},
              "uuid": "fb0b2d00-6c3b-4bfa-a06b-52900b3a94b3",
              "parentUUID": "1e80fb72-a143-497c-b49b-4fae7a58ecef",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f6522ba1-6d11-43bf-9b0d-feaf5c4eb925",
              "title": "Sign up",
              "fullFile": "/Users/ekwong/Documents/git/platform-exercise/test/signup.test.js",
              "file": "/test/signup.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should POST to signup new user",
                  "fullTitle": "User Registration Sign up it should POST to signup new user",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(server)\n    .post('/api/auth/signup')\n    .send(constants.TEST_USER)\n    .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.contain({message: constants.REGISTERED_SUCCESS});\n      done();\n    });",
                  "err": {},
                  "uuid": "3b3fce27-89bd-42cc-bbf0-63a97f037330",
                  "parentUUID": "f6522ba1-6d11-43bf-9b0d-feaf5c4eb925",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b3fce27-89bd-42cc-bbf0-63a97f037330"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "test_reports"
      },
      "version": "5.1.0"
    }
  }
}